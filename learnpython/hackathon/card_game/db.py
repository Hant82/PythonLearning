'''K·∫øt n·ªëi CSDL'''
from pymysql import connect, cursors, Error
from game import Game 
from datetime import datetime
from datetime import date
config = {
    "host": "localhost",
    "user": "root",
    "password": "",
    "database": "game_card",
    # "cursorclass": cursors.DictCursor
}
cnx = connect(**config)

def logs(game_1,dem):
    '''
    Ghi th√¥ng tin v·ªÅ game v√†o CSDL v√† 2 b·∫£ng games v√† logs

    B·∫£ng games g·ªìm t√™n ng∆∞·ªùi chi·∫øn th·∫Øng

    B·∫£ng logs g·ªìm danh s√°ch ng∆∞·ªùi ch∆°i, b·ªô b√†i, ƒëi·ªÉm v√† l√° b√†i l·ªõn nh·∫•t t∆∞∆°ng ·ª©ng v·ªõi game

    Ch√∫ √Ω, sau khi INSERT v√†o games, c√≥ th·ªÉ l·∫•y id c·ªßa game v·ª´a t·∫°o v·ªõi cursor.lastrowid
    '''
   
  
    for i in range(0,len(game_1.number)):
        sql="INSERT INTO logs (gamer,deck,point,biggest_card,route) VALUES (%s, %s,%s,%s,%s)"
        # print(game_1.number[i].name)
        # print(game_1.number[i].ghep_card())
        # print(game_1.number[i].point)
        # print(game_1.number[i].biggest_card.__str__())
        value=(game_1.number[i].name,game_1.number[i].ghep_card(),game_1.number[i].point,game_1.number[i].biggest_card.__str__(),dem)
        cur = cnx.cursor()    
        try:
            cur.execute(sql,value)
            cnx.commit()
        except:
            cnx.rollback()
   
    
    
def games(game_1,dem):
    sql1="INSERT INTO games (winner,date_time,route) VALUES (%s,%s,%s)"
    value1=(game_1.flip_card().name,datetime.now(),dem)
    cur1 = cnx.cursor()
    try:
            cur1.execute(sql1,value1)
            cnx.commit()
    except:
            cnx.rollback()

def get_thutulanchoi():
    sql="SELECT MAX(route) as luot FROM `logs` "
    cur = cnx.cursor()
    cur.execute(sql)
    for i in cur:
        # print(i[0])
        result= i[0]
    return result


def get_last_game():
    '''L·∫•y th√¥ng tin v·ªÅ game g·∫ßn nh·∫•t t·ª´ c·∫£ 2 b·∫£ng games v√† logs'''
    "L·∫•y th√¥ng tin s·ªë ng∆∞·ªùi ch∆°i, ng∆∞·ªùi chi·∫øn th·∫Øng, s·ªë ƒëi·ªÉm t·ª´ng ng∆∞·ªùi ch∆°i, b·ªô b√†i t·ª´ng ng∆∞·ªùi ch∆°i, l√° b√†i l·ªõn nh·∫•t c·ªßa t·ª´ng ng∆∞·ªùi ch∆°i"
    "ƒê·∫øm s·ªë ng∆∞·ªùi ch∆°i trong l∆∞·ª£t "
    # sql="SELECT * FROM games AS g ORDER BY g.`date_time` DESC"
    # cur = cnx.cursor()
    # cur.execute(sql)
    sql = '''
    SELECT * FROM games AS g ORDER BY g.`date_time` DESC
    '''
    cur = cnx.cursor()
    cur.execute(sql)
    game = cur.fetchone()

    # if not game:
    #     raise Exception('Kh√¥ng c√≥ l·ªãch s·ª≠ game\nCh∆°i v√†i game vui v·∫ª ƒëi üòâ\n')

    sql = f'''
    SELECT *
    FROM logs
    WHERE route = {game[2]}
    '''
    cur.execute(sql)
    players = cur.fetchall()
    for i in players:
        print(f"T√™n ng∆∞·ªùi ch∆°i:{i[1]} C√°c l√° b√†i:{i[2]} ƒêi·ªÉm:{i[3]} L√° b√†i l√≥n nh·∫•t: {i[4]}")

    # sql = f'''
    # SELECT MAX(route) as luot FROM `games`
    # '''
    sql="SELECT winner,date_time FROM `games` WHERE `route`=(SELECT max(route) FROM `games`)"
    cur.execute(sql)
    winner = cur.fetchall()
    for j in winner:
        print(f"T√™n ng∆∞·ªùi chi·∫øn th·∫Øng l∆∞·ª£t ch∆°i n√†y l√†:{j[0]} Th·ªùi gian: {j[1]}" )
    # return game, players

def history():
    '''
    L·∫•y th√¥ng tin v·ªÅ l·ªãch s·ª≠ ch∆°i

    Bao g·ªìm t·ªïng s·ªë game ƒë√£ ch∆°i, s·ªë game chi·∫øn th·∫Øng ·ª©ng v·ªõi m·ªói ng∆∞·ªùi ch∆°i (s·ª≠ d·ª•ng GROUP BY v√† c√°c h√†m t·ªïng h·ª£p)
    '''
    # s·ªë v√°n b√†i ch∆°i trong ng√†y
    # th√¥ng tin b√†n th·∫Øng c·ªßa t·ª´ng ng∆∞·ªùi
    sql1 = '''
    SELECT COUNT(winner) AS game_won FROM games AS g
    WHERE DATE(g.date_time) = CURDATE()
    
    '''
    cur = cnx.cursor()
    cur.execute(sql1)
    for i in cur:
        print (f"S·ªë v√°n b√†i ch∆°i trong ng√†y h√¥m nay ({date.today()}) l√†: {i[0]} v√°n")

    sql = '''
    SELECT
        winner,
        COUNT(winner) AS game_won
    FROM games AS g
    WHERE DATE(g.date_time) = CURDATE()
    GROUP BY winner
    ORDER BY game_won DESC
    '''
    cur = cnx.cursor()
    cur.execute(sql)
    ls = cur.fetchall()
    if len(ls)==0:
        print ("Ch∆∞a c√≥ ng∆∞·ªùi ch∆°i trong ng√†y h√¥m nay")
    else:
        print ("Danh s√°ch ng∆∞·ªùi chi·∫øn th·∫Øng l√†:")
    for j in ls:
        print(f"{j[0]} ƒë√£ th·∫Øng {j[1]} v√°n" )

    # sql1 = '''
    # SELECT COUNT(winner) AS game_won FROM games AS g
    # WHERE DATE(g.date_time) = CURDATE()
    
    # '''
    # cur = cnx.cursor()
    # cur.execute(sql1)
    # for i in cur:
    #     print ("S·ªë v√°n b√†i ch∆°i trong ng√†y l√†", i[0])
    # records = cur.fetchall()

    # if not records:
    #     raise Exception('Kh√¥ng c√≥ l·ªãch s·ª≠ game\nCh∆°i v√†i game vui v·∫ª ƒëi üòâ\n')

    # total_game = sum([r['game_won'] for r in records])
    # return total_game, recordszx
# g=Game()
# g.setup()
# g.deal_card()
# log(g)
# g.flip_card()

